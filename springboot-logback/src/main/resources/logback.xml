<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="true" scan="true" scanPeriod="1 seconds">

    <property resource="application.yml"/>

    <contextName>logback</contextName>
    <!--定义参数,后面可以通过${app.name}使用-->
    <property name="app.name" value="logback_test"/>

    <!--   <springProperty scope="context" name="LOG_HOME" source="/Users/minzhang/Desktop/temp"/>-->

    <property name="LOG_HOME" value="/Users/minzhang/Desktop/temp"/>

    <property name="pattern_dev" value="%d [%thread] %-5level %logger{36} [%file : %line] -dev- %msg%n"/>

    <property name="pattern_test" value="%d [%thread] %-5level %logger{36} [%file : %line] -test- %msg%n"/>

    <!--<property name="LOG_HOME" value="${user.dir}"/>-->
    <!--ConsoleAppender 用于在屏幕上输出日志-->
    <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
        <!--定义了一个过滤器,在LEVEL之下的日志输出不会被打印出来-->
        <!--这里定义了DEBUG，也就是控制台不会输出比ERROR级别小的日志-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>trace</level>
        </filter>
        <!-- encoder 默认配置为PatternLayoutEncoder -->
        <!--定义控制台输出格式-->
        <encoder>
            <srpingProfile name = "dev">
                <pattern>${pattern_dev}</pattern>
            </srpingProfile>
            <srpingProfile name = "test">
                <pattern>${pattern_test}</pattern>
            </srpingProfile>
        </encoder>
    </appender>

    <appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--定义日志输出的路径-->
        <!--这里的scheduler.manager.server.home 没有在上面的配置中设定，所以会使用java启动时配置的值-->
        <!--比如通过 java -Dscheduler.manager.server.home=/path/to XXXX 配置该属性-->
        <file>${LOG_HOME}/logs/${app.name}.log</file>
        <!--定义日志滚动的策略-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--定义文件滚动时的文件名的格式-->
            <fileNamePattern>${LOG_HOME}/logs/${app.name}.%d{yyyy-MM-dd.HH}.log.gz
            </fileNamePattern>
            <!--60天的时间周期，日志量最大20GB-->
            <maxHistory>60</maxHistory>
            <!-- 该属性在 1.1.6版本后 才开始支持-->
            <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <!--每个日志文件最大100MB-->
            <maxFileSize>100MB</maxFileSize>
        </triggeringPolicy>
        <!--定义输出格式-->
        <encoder>
            <srpingProfile name = "dev">
                <pattern>${pattern_dev}</pattern>
            </srpingProfile>
            <srpingProfile name = "test">
                <pattern>${pattern_test}</pattern>
            </srpingProfile>
        </encoder>
    </appender>
    <!-- 异步日志 -->
    <appender name="async" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="stdout"/>
        <appender-ref ref="file"/>

    </appender>

    <!--root是默认的logger 这里设定输出级别是debug-->
    <root level="ALL">
        <!--定义了两个appender，日志会通过往这两个appender里面写-->
       <!-- <appender-ref ref="stdout"/>-->
        <!--<appender-ref ref="async"/>-->


        <appender-ref ref="stdout"/>
        <appender-ref ref="file"/>

    </root>

</configuration>